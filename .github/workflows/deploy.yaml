name: Deploy Java App to EC2

on:
  workflow_dispatch: {}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '21'

      - name: Build with Maven
        run: mvn clean package --file pom.xml

      - name: Copy files to EC2 with scp
        uses: appleboy/scp-action@v1
        with:
          host: ${{ vars.EC2_HOST }}
          username: ${{ vars.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          source: "target/todo-0.0.1-app.jar"
          target: "/home/${{ vars.EC2_USER }}/team_one/"
          rm: true

      - name: Run remote commands on EC2 and configure Nginx + systemd
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.EC2_HOST }}
          username: ${{ vars.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            set -e
            APP_DIR="/home/${{ vars.EC2_USER }}/team_one"
            JAR_NAME="team_one-backend.jar"  # change if needed
            SERVICE_NAME="team_one"
            
            echo "--- Preparing Java App in $APP_DIR ---"
            mkdir -p "$APP_DIR"
            cd "$APP_DIR"
            
            echo "--- Installing Java 21 (Amazon Corretto) ---"
            sudo amazon-linux-extras enable corretto21
            sudo yum install -y java-21-amazon-corretto
            
            echo "--- Writing environment variables to .env ---"
            cat <<EOF > "$APP_DIR/.env"
            DB_HOST=${{ vars.DB_HOST }}
            DB_PORT=${{ vars.DB_PORT }}
            DB_USER=${{ vars.DB_USER }}
            DB_NAME=${{ vars.DB_NAME }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            EOF
            
            echo "--- Creating systemd service for $SERVICE_NAME ---"
            sudo bash -c "cat > /etc/systemd/system/$SERVICE_NAME.service" <<EOF
            [Unit]
            Description=team_one Java Backend
            After=network.target
            
            [Service]
            User=${{ vars.EC2_USER }}
            WorkingDirectory=$APP_DIR
            EnvironmentFile=$APP_DIR/.env
            ExecStart=/usr/bin/java -jar $APP_DIR/$JAR_NAME
            Restart=on-failure
            RestartSec=10
            
            [Install]
            WantedBy=multi-user.target
            EOF
            
            echo "--- Reloading systemd and starting service ---"
            sudo systemctl daemon-reexec
            sudo systemctl daemon-reload
            sudo systemctl enable $SERVICE_NAME
            sudo systemctl restart $SERVICE_NAME
            
            echo "--- Installing and configuring NGINX ---"
            if ! command -v nginx &> /dev/null; then
            sudo yum install -y nginx
            sudo systemctl enable nginx
            fi
            
            echo "Configuring 'server_names_hash_bucket_size'..."
            if ! grep -q "server_names_hash_bucket_size" /etc/nginx/nginx.conf; then
            sudo sed -i '/http {/a \    server_names_hash_bucket_size 128;' /etc/nginx/nginx.conf
            else
            sudo sed -i 's/^\(\s*\)#\?\s*server_names_hash_bucket_size.*/\1server_names_hash_bucket_size 128;/' /etc/nginx/nginx.conf
            fi
            
            NGINX_CONF="/etc/nginx/conf.d/team_one.conf"
            echo "Creating Nginx config file: $NGINX_CONF"
              echo "
              server {
              listen 80;
              listen [::]:80;
              server_name ${{ vars.EC2_HOST }};
            
              location / {
              proxy_pass http://localhost:8080;
              proxy_http_version 1.1;
              proxy_set_header Upgrade \$http_upgrade;
              proxy_set_header Connection 'upgrade';
              proxy_set_header Host \$host;
              proxy_cache_bypass \$http_upgrade;
              proxy_set_header X-Real-IP \$remote_addr;
              proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto \$scheme;
              }
            }
              " | sudo tee "$NGINX_CONF" > /dev/null
            
              echo "Testing and restarting Nginx..."
              sudo nginx -t && sudo systemctl restart nginx
            
            echo "âœ… Deployment complete. Java app is running under systemd and accessible via NGINX."
